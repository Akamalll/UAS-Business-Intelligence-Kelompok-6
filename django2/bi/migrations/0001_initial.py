# Generated by Django 4.2.23 on 2025-06-14 08:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255)),
                ('parent_category_id', models.CharField(blank=True, max_length=100, null=True)),
                ('category_level', models.IntegerField()),
                ('category_path', models.TextField()),
                ('is_standardized', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('cluster_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('cluster_name', models.CharField(max_length=255)),
                ('cluster_description', models.TextField()),
                ('cluster_keywords', models.TextField()),
                ('cluster_size', models.IntegerField()),
                ('cluster_confidence', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('date_id', models.IntegerField(primary_key=True, serialize=False)),
                ('full_date', models.DateField()),
                ('day_of_week', models.IntegerField()),
                ('day_name', models.CharField(max_length=20)),
                ('month', models.IntegerField()),
                ('month_name', models.CharField(max_length=20)),
                ('quarter', models.IntegerField()),
                ('year', models.IntegerField()),
                ('is_weekend', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DistributionStatus',
            fields=[
                ('status_id', models.IntegerField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=50)),
                ('status_description', models.TextField()),
                ('recommended_action', models.TextField()),
                ('color_code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('merchant_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('merchant_name', models.CharField(max_length=255)),
                ('merchant_rating', models.FloatField()),
                ('merchant_type', models.CharField(max_length=50)),
                ('merchant_url', models.URLField()),
                ('merchant_location', models.CharField(max_length=255)),
                ('joined_date', models.DateField()),
                ('is_active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='OfferQuality',
            fields=[
                ('offer_quality_id', models.IntegerField(primary_key=True, serialize=False)),
                ('quality_level', models.CharField(max_length=50)),
                ('price_to_rating_ratio', models.FloatField()),
                ('price_competitiveness', models.CharField(max_length=50)),
                ('merchant_reliability_score', models.FloatField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('product_title', models.CharField(max_length=255)),
                ('product_description', models.TextField()),
                ('product_url', models.URLField()),
                ('image_url', models.URLField()),
                ('price', models.FloatField()),
                ('currency', models.CharField(max_length=10)),
                ('rating', models.FloatField()),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ProductDistribution',
            fields=[
                ('distribution_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_products', models.IntegerField()),
                ('total_merchants', models.IntegerField()),
                ('avg_price', models.FloatField()),
                ('min_price', models.FloatField()),
                ('max_price', models.FloatField()),
                ('price_std_deviation', models.FloatField()),
                ('avg_rating', models.FloatField()),
                ('duplicates_detected', models.IntegerField()),
                ('miscategorized_count', models.IntegerField()),
                ('last_updated', models.DateTimeField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.category')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.cluster')),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.date')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.distributionstatus')),
            ],
        ),
        migrations.CreateModel(
            name='ProductClassification',
            fields=[
                ('product_classification_id', models.AutoField(primary_key=True, serialize=False)),
                ('classification_confidence', models.FloatField()),
                ('is_validated', models.BooleanField()),
                ('last_update_timestamp', models.DateTimeField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.category')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.cluster')),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.date')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.merchant')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.product')),
            ],
        ),
        migrations.CreateModel(
            name='PriceComparison',
            fields=[
                ('price_comparison_id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.FloatField()),
                ('price_difference_from_avg', models.FloatField()),
                ('price_difference_percentage', models.FloatField()),
                ('is_best_offer', models.BooleanField()),
                ('price_rank_in_cluster', models.IntegerField()),
                ('price_rank_in_category', models.IntegerField()),
                ('price_timestamp', models.DateTimeField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.category')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.cluster')),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.date')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.merchant')),
                ('offer_quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.offerquality')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bi.product')),
            ],
        ),
    ]
